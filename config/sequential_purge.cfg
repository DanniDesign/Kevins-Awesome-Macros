[save_variables]
filename: ~/variables.cfg

[gcode_macro check_purges]
description: Checks if purge section is full. Only needed when using the Limited version.
gcode:

    {% if printer.save_variables.variables.purge_index > printer["gcode_macro KAM_SETTINGS"].purge_sections_amount and printer["gcode_macro KAM_SETTINGS"].continuous is not true%}
        {action_raise_error("Purge area is full! Please remove all purges. Use RESET_PURGES when done.")}
    {% endif %}

[gcode_macro reset_purges]
description: Resets the purge_index to 1 indicating there is no purgeline present. Only needed when using the Limited version.
gcode:
    SAVE_VARIABLE VARIABLE=purge_index VALUE=1

[gcode_macro sequential_purge]
description: Makes sequential purges in case you forget to remove the purge your previous print did. Requires save_variables
gcode:
    {% set purge_index = printer.save_variables.variables.purge_index | int %}                                                      # gets current purge order location thingy
    
    {% set KAM_settings = printer["gcode_macro _KAM_SETTINGS"] %}
    {% set continuous = KAM_SETTINGS.continuous %}
    {% set stop_print_on_warning = KAM_SETTINGS.stop_print_on_warning %}
    {% set warning_time = KAM_SETTINGS.warning_time %}
    {% set bedsize_purge_offset = KAM_SETTINGS.bedsize_purge_offset %}
    {% set purge_sections_amount = KAM_SETTINGS.purge_sections_amount %}
    {% set purge_height = KAM_SETTINGS.purge_height %}
    {% set flow_rate = KAM_SETTINGS.flow_rate %}
    {% set purge_amount = KAM_SETTINGS.purge_amount %}
    {% set tip_distance = KAM_SETTINGS.tip_distance %}
    {% set purge_line_end_overlap = KAM_SETTINGS.purge_line_end_overlap %}
    
    {% if purge_index > purge_sections_amount and continuous is true %}
        SAVE_VARIABLE VARIABLE=purge_index VALUE=1
    {% endif %}
    
    {% set purge_begin_x = printer.toolhead.axis_minimum.x + bedside_purge_offset %}                                                # gets the start point of the overall purge line
    {% set purge_end_x = printer.toolhead.axis_maximum.x - bedside_purge_offset %}                                                  # gets the end point of the overall purge line
    {% set purge_begin_y = printer.toolhead.axis_minimum.y + bedside_purge_offset %}                                                # gets the start point of the overall purge line
    {% set purge_move_speed = (flow_rate / 4.0) * 60 | float %}
    
    {% set section_size = purge_end_x // purge_sections_amount %}                                                                   # divide the full purge section in multiple sections with the given purge_sections_amount
    {% set section_index = (purge_index - 1) % purge_sections_amount | int %}                                                       # this line calculates the section_index, which represents which section the current purge falls into based on the purge_index and the number of purge_sections_amount
    {% set purge_start_x = section_index * section_size | int %}                            # gets the first coordinate of the purge line
    {% set purge_end_x = (((section_index + 1) * section_size)) - (3 * (purge_line_end_overlap * 0.01)) %}                                                                    # gets the last coordinate of the purge line

    {% if printer.firmware_retraction is defined %}
        {% set retract = G10 | string %}
        {% set unretract = G11 | string %}
    {% else %}
        {% set retract = 'G1 E-1 F2100' | string %}
        {% set unretract = 'G1 E1 F2100' | string %}
    {% endif %}

    {% if continuous is true %}

        SAVE_GCODE_STATE NAME=prepurge                                                                                              # create gcode state

        G92 E0                                                                                                                      # reset extruder
        G0 F5000                                                                                                                    # set travel speed
        G90                                                                                                                         # set absolute positioning
        G0 Z{purge_height}
        G0 X{purge_start_x} Y{purge_begin_y}                                                                                        # move to the start of the purge line
        M83                                                                                                                         # set absolute positioning
        G1 E{tip_distance} F{purge_move_speed}
        G1 X{purge_end_x} E{purge_amount/8} F{purge_move_speed} E{purge_amount/8} F{purge_move_speed}                               # print the purge line
        {retract}                                                                                                                   # unretract filament
        G92 E0                                                                                                                      # set extruder back to zero
        M82                                                                                                                         # set relative positioning
        G0 Z{purge_height * 2}                                                                                                      # move nozzle up

        SAVE_VARIABLE VARIABLE=purge_index VALUE={purge_index + 1}                                                                  # increase purge_index by 1 for the next purge/print

        RESTORE_GCODE_STATE NAME=prepurge                                                                                           # restore the gcode state
    
    {% else %}

        {% if printer['gcode_macro check_purges'] is not defined %}                                                                 # checks if CHECK_PURGES is present and if not throw and error.
            {action_raise_error("Macro CHECK_PURGES is not present in your configuration. Please refer to the documentation or the info section on 'Limited' in the settings macro and add it.")}
        {% endif %}

        {% if purge_index > purge_sections_amount %}                                                                                # start print should check this before doing purge so printer isnt uselessly heated before aborting print. But doing this check anyways
            {% if stop_print_on_warning is true %}
                {action_raise_error("Purge area is full! Please remove all purges from the buildplate. Use RESET_PURGES when done.")}
            {% else %}
                RESPOND TYPE=error MSG="Purge area is full! Please remove all purges from the buildplate."
                G4 S{warning_time}
                RESET_PURGES
            {% endif %}   
        {% endif %}

        SAVE_GCODE_STATE NAME=prepurge                                                                                              # create gcode state

        G92 E0                                                                                                                      # reset extruder
        G0 F5000                                                                                                                    # set travel speed
        G90                                                                                                                         # set absolute positioning
        {% if printer.toolhead.position.z < 5 and purge_index >= 1 %}                                                               # check if the toolhead has clearance for the purge lines
            G0 Z{purge_height * 2}
        {% else %}
            G0 Z{purge_height}
        {% endif %}

        G0 X{purge_start_x} Y{purge_begin_y}                                                                                        # move to the start of the purge line
        G0 Z{purge_height}
        M83                                                                                                                         # set absolute positioning
        G1 E{tip_distance} F{purge_move_speed}
        G1 X{purge_end_x} E{purge_amount/8} F{purge_move_speed}                                                                     # print the purge line
        {retract}                                                                                                                   # unretract filament
        G92 E0                                                                                                                      # set extruder back to zero
        M82                                                                                                                         # set relative positioning
        G0 Z{purge_height * 2}                                                                                                      # move nozzle up

        SAVE_VARIABLE VARIABLE=purge_index VALUE={purge_index + 1}                                                                  # increase purge_index by 1 for the next purge/print

        RESTORE_GCODE_STATE NAME=prepurge                                                                                           # restore the gcode state
    
    {% endif %}
